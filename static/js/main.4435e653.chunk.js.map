{"version":3,"sources":["index.js"],"names":["PlayerCard","team","player","this","props","teamData","teamLogo","teamColorPrimary","teamId","className","src","alt","name","height","width","console","log","hex","alpha","replace","r","parseInt","length","slice","repeat","g","b","hexToRgb","teamColors","primary","color","playerInfo","style","backgroundColor","onClick","removePlayer","playerId","shownPlayers","headshot","number","role","eliminations_avg_per_10m","toFixed","deaths_avg_per_10m","hero_damage_avg_per_10m","toLocaleString","undefined","maximumFractionDigits","healing_avg_per_10m","ultimates_earned_avg_per_10m","final_blows_avg_per_10m","seconds","hours","Math","floor","minutes","round","formatSeconds","time_played_total","React","Component","AddPlayer","setPlayerId","e","setState","pId","Number","target","value","setRole","setTeamId","state","teamKeys","Object","keys","sort","a","playerData","playerKeys","filter","toLowerCase","onChange","map","tId","key","size","onDoubleClick","addPlayer","exitAddPlayer","Main","tempShownPlayers","push","clearPlayers","Promise","all","fetch","then","json","playerStats","tempPlayerData","data","tempTeamData","id","logo","main","svg","colors","players","meatName","fullName","ReactDOM","render","document","getElementById"],"mappings":"iQAIMA,G,uLACM,IAGJC,EAHG,OACHC,EAASC,KAAKC,MAAMF,OACpBG,EAAWF,KAAKC,MAAMC,SAG1B,GAAIH,EAAQ,CAEV,IAAII,EACAC,GAFJN,EAAOI,EAASH,EAAOM,WAIrBF,EAAW,yBAAKG,UAAU,mBAAkBC,IAAKT,EAAKK,SAAUK,IAAG,UAAKV,EAAKW,KAAV,SAAuBC,OAAO,KAAKC,MAAM,OAC5GC,QAAQC,IAAIf,GACZM,EAwPR,SAAkBU,EAAKC,GACpBD,EAAQA,EAAIE,QAAQ,IAAK,IACzB,IAAIC,EAAIC,SAAwB,IAAfJ,EAAIK,OAAeL,EAAIM,MAAM,EAAG,GAAGC,OAAO,GAAKP,EAAIM,MAAM,EAAG,GAAI,IAC7EE,EAAIJ,SAAwB,IAAfJ,EAAIK,OAAeL,EAAIM,MAAM,EAAG,GAAGC,OAAO,GAAKP,EAAIM,MAAM,EAAG,GAAI,IAC7EG,EAAIL,SAAwB,IAAfJ,EAAIK,OAAeL,EAAIM,MAAM,EAAG,GAAGC,OAAO,GAAKP,EAAIM,MAAM,EAAG,GAAI,IACjF,OAAKL,EACK,QAAUE,EAAI,KAAOK,EAAI,KAAOC,EAAI,KAAOR,EAAQ,IAGnD,OAASE,EAAI,KAAOK,EAAI,KAAOC,EAAI,IAjQrBC,CAAS1B,EAAK2B,WAAWC,QAAQC,MAAO,KAE7D,IAAIC,EACF,0BAAMtB,UAAU,eACd,yBAAKA,UAAU,gBAAgBuB,MAAO,CAACC,gBAAiB1B,IACtD,4BAAQE,UAAU,QAAQyB,QAAS,kBAAM,EAAK9B,MAAM+B,aAAajC,EAAOkC,SAAU,EAAKhC,MAAMiC,gBAA7F,QACA,yBAAK3B,IAAKR,EAAOoC,SAAU3B,IAAG,UAAKT,EAAOU,KAAZ,aAA6BC,OAAO,MAAMC,MAAM,QAC7EZ,EAAOqC,OACN,0BAAM9B,UAAU,sBAAsBP,EAAOqC,QAC3C,KAEHjC,EACD,yBAAKG,UAAU,mBAAmBC,IAAG,mBAAcR,EAAOsC,KAArB,QAAiC7B,IAAG,UAAKT,EAAOsC,KAAZ,SAAyB3B,OAAO,KAAKC,MAAM,QAEtH,+BACE,+BACE,4BAAI,4BAAKZ,EAAOU,QAElB,+BACE,4BAAI,4BAAKV,EAAOuC,yBAAyBC,QAAQ,KACjD,4BAAI,4BAAKxC,EAAOyC,mBAAmBD,QAAQ,KAC3C,4BAAI,4BAAKxC,EAAO0C,wBAAwBC,oBAAeC,EAAW,CAACC,sBAAuB,MAC1F,4BAAI,4BAAK7C,EAAO8C,oBAAoBH,oBAAeC,EAAW,CAACC,sBAAuB,MACtF,4BAAI,4BAAK7C,EAAO+C,6BAA6BP,QAAQ,KACrD,4BAAI,4BAAKxC,EAAOgD,wBAAwBR,QAAQ,KAChD,4BAAI,4BAwNlB,SAAuBS,GACnB,IAAIC,EAAUC,KAAKC,MAAMH,EAAU,MAC/BI,EAAUF,KAAKG,OAAOL,EAAmB,KAARC,GAAiB,IACtD,OAAIA,EAAQ,EAAS,GAAN,OAAUA,EAAV,aAAoBG,EAApB,KACT,GAAN,OAAUA,EAAV,KA5NmBE,CAAcvD,EAAOwD,wBAOxC,OACE,yBAAKjD,UAAU,UACZsB,O,GA/CgB4B,IAAMC,YAqDzBC,E,YACJ,WAAYzD,GAAQ,IAAD,8BACjB,4CAAMA,KAQR0D,YAAc,SAACC,GACb,EAAKC,SAAS,CAACC,IAAKC,OAAOH,EAAEI,OAAOC,UAVnB,EAYnBC,QAAU,SAACN,GACT,EAAKC,SAAS,CAACxB,KAAMuB,EAAEI,OAAOC,SAbb,EAenBE,UAAY,SAACP,GACX,EAAKC,SAAS,CAACxD,OAAQ0D,OAAOH,EAAEI,OAAOC,UAdvC,EAAKG,MAAQ,CACXN,IAAK,KACLzB,KAAM,WACNhC,OAAQ,GALO,E,sEAmBT,IAAD,OACHH,EAAYF,KAAKC,MAAMC,SACvBmE,EAAWC,OAAOC,KAAKrE,GAC3BmE,EAASG,MAAK,SAACC,EAAElD,GAAH,OAAUrB,EAASuE,GAAGhE,KAAOP,EAASqB,GAAGd,KAAQ,EAAMP,EAASqB,GAAGd,KAAOP,EAASuE,GAAGhE,MAAS,EAAI,KAEjH,IAAIiE,EAAa1E,KAAKC,MAAMyE,WACxBC,EAAaL,OAAOC,KAAKG,GAS7B,MARwB,aAApB1E,KAAKoE,MAAM/B,OACbsC,EAAaA,EAAWC,QAAO,SAAChB,GAAQ,OAAOc,EAAWd,GAAGvB,OAAU,EAAK+B,MAAM/B,SAE1D,IAAtBrC,KAAKoE,MAAM/D,SACbsE,EAAaA,EAAWC,QAAO,SAAChB,GAAQ,OAAOc,EAAWd,GAAGvD,SAAY,EAAK+D,MAAM/D,WAEtFsE,EAAWH,MAAK,SAACC,EAAElD,GAAH,OAAUmD,EAAWD,GAAGhE,KAAKoE,cAAgBH,EAAWnD,GAAGd,KAAKoE,cAAiB,EAAMH,EAAWnD,GAAGd,KAAOiE,EAAWD,GAAGhE,MAAS,EAAI,KAGrJ,yBAAKH,UAAU,+BACb,8BACA,yBAAKA,UAAU,2BACb,6CACA,yBAAKA,UAAU,kBACb,4BAAQA,UAAU,cAAcwE,SAAU9E,KAAKmE,WAC7C,4BAAQF,MAAM,KAAd,aACCI,EAASU,KAAI,SAACC,GAAD,OACZ,4BAAQC,IAAKD,EAAKf,MAAOe,GAAM9E,EAAS8E,GAAKvE,UAGjD,4BAAQqE,SAAU9E,KAAKkE,SACrB,4BAAQD,MAAM,YAAd,aACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,WAAd,aAGJ,6BACE,4BAAQ3D,UAAU,gBAAgBwE,SAAU9E,KAAK2D,YAAauB,KAAMP,EAAWxD,OAAS,GAAKwD,EAAWxD,OAAS,IAC9GwD,EAAWI,KAAI,SAACjB,GAAD,OACd,4BAAQmB,IAAKnB,EAAKG,MAAOH,EAAKqB,cAAe,EAAKf,MAAMN,IAAO,kBAAM,EAAK7D,MAAMmF,UAAU,EAAKhB,MAAMN,MAAQ,MAAOY,EAAWZ,GAAKrD,UAGxI,6BACE,4BACEsB,QAAS/B,KAAKoE,MAAMN,IAAO,kBAAM,EAAK7D,MAAMmF,UAAU,EAAKhB,MAAMN,MAAQ,MAD3E,OAIA,4BACE/B,QAAS/B,KAAKC,MAAMoF,eADtB,gB,GAjEU7B,IAAMC,WA6ExB6B,E,YACJ,WAAYrF,GAAQ,IAAD,8BACjB,4CAAMA,KA6CR+B,aAAe,SAAC8B,EAAK5B,GACnB,IAAIqD,EAAmB,GADa,uBAEpC,YAAmBrD,EAAnB,+CAAiC,CAAC,IAAzBnC,EAAwB,QAC3B+D,IAAQ/D,GACVwF,EAAiBC,KAAKzF,IAJU,kFAOpC,EAAK8D,SAAS,CAAC3B,aAAcqD,KArDZ,EAwDnBE,aAAe,WACb,EAAK5B,SAAS,CAAC3B,aAAc,MAzDZ,EA4DnBkD,UAAY,SAACtB,GACX,EAAKD,SAAS,CAAC3B,aAAa,GAAD,mBAAM,EAAKkC,MAAMlC,cAAjB,CAA+B4B,MAC1D,EAAKD,SAAS,CAACuB,WAAW,KA9DT,EAiEnBC,cAAgB,WACd,EAAKxB,SAAS,CAACuB,WAAW,KAhE1B,EAAKhB,MAAQ,CACXM,WAAY,GACZxE,SAAU,GACVgC,aAAc,GACdkD,WAAW,GANI,E,iFAUE,IAAD,OAClBM,QAAQC,IAAI,CACVC,MAAM,6CAA6CC,MAAK,SAAA5B,GAAK,OAAIA,EAAM6B,UACvEF,MAAM,iDAAiDC,MAAK,SAAA5B,GAAK,OAAIA,EAAM6B,YAC1ED,MAAM,YAA8B,IAAD,mBAA3B3F,EAA2B,KAAjB6F,EAAiB,KAEhCC,EAAiB,GAFe,uBAGpC,YAAmBD,EAAYE,KAA/B,+CAAqC,CAAC,IAA7BlG,EAA4B,QACnCiG,EAAejG,EAAOkC,UAAYlC,GAJA,kFAMpC,EAAK8D,SAAS,CAACa,WAAYsB,IAG3B,IAAIE,EAAe,GATiB,uBAUpC,YAAiBhG,EAAS+F,KAA1B,+CAAgC,CAAC,IAAxBnG,EAAuB,QAC9BoG,EAAapG,EAAKqG,IAAM,CACtB1F,KAAMX,EAAKW,KACXN,SAAUL,EAAKsG,KAAKC,KAAKC,IACzB7E,WAAY3B,EAAKyG,QAEnB,IAAIP,EAAiB,EAAK5B,MAAMM,WANF,uBAO9B,YAAmB5E,EAAK0G,QAAxB,+CAAiC,CAAC,IAAzBzG,EAAwB,QAC3BiG,EAAejG,EAAOoG,MACxBH,EAAejG,EAAOoG,IAAI/D,OAASrC,EAAOqC,OAC1C4D,EAAejG,EAAOoG,IAAIhE,SAAWpC,EAAOoC,SAC5C6D,EAAejG,EAAOoG,IAAIM,SAAW1G,EAAO2G,WAXlB,kFAe9B,EAAK7C,SAAS,CAACa,WAAYsB,KAzBO,kFA2BpC,EAAKnC,SAAS,CAAE3D,SAAUgG,S,+BA4BpB,IAAD,OACP,OACE,yBAAK5F,UAAU,kBACb,6DACA,4BAAQA,UAAU,yBAAyByB,QAAS,kBAAM,EAAK8B,SAAS,CAACuB,WAAW,MAApF,cACA,4BAAQ9E,UAAU,2BAA2ByB,QAAS/B,KAAKyF,cAA3D,SACA,yBAAKnF,UAAU,mBACb,yBAAKA,UAAU,sBACb,8BACA,+BACE,+BACE,4BAAI,kDAEN,+BACE,4BAAI,sDACJ,4BAAI,gDACJ,4BAAI,4CACJ,4BAAI,wCACJ,4BAAI,yDACJ,4BAAI,4CACJ,4BAAI,qDAITN,KAAKoE,MAAMlC,aAAa6C,KAAI,SAACjB,GAAD,OAC3B,kBAACjE,EAAD,CACEoF,IAAKnB,EACL/D,OAAQ,EAAKqE,MAAMM,WAAWZ,GAC9B5D,SAAU,EAAKkE,MAAMlE,SACrB8B,aAAc,EAAKA,aACnBE,aAAc,EAAKkC,MAAMlC,kBAG5BlC,KAAKoE,MAAMgB,UACV,kBAAC1B,EAAD,CACEgB,WAAY1E,KAAKoE,MAAMM,WACvBxE,SAAUF,KAAKoE,MAAMlE,SACrBkF,UAAWpF,KAAKoF,UAChBC,cAAerF,KAAKqF,gBAEpB,W,GA9GK7B,IAAMC,WA0HzBkD,IAASC,OAAO,kBAACtB,EAAD,MAASuB,SAASC,eAAe,U","file":"static/js/main.4435e653.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass PlayerCard extends React.Component {\r\n  render() {\r\n    let player = this.props.player;\r\n    let teamData = this.props.teamData;\r\n    let team;\r\n\r\n    if (player) {\r\n      team = teamData[player.teamId];\r\n      let teamLogo;\r\n      let teamColorPrimary;\r\n      if (team) {\r\n        teamLogo = <img className=\"player-team icon\"src={team.teamLogo} alt={`${team.name} Logo`} height=\"50\" width=\"48\"></img>\r\n        console.log(team);\r\n        teamColorPrimary = hexToRgb(team.teamColors.primary.color, 0.5);\r\n      }\r\n      var playerInfo = (\r\n        <span className=\"player-card\">\r\n          <div className=\"player-avatar\" style={{backgroundColor: teamColorPrimary}}>\r\n            <button className=\"close\" onClick={() => this.props.removePlayer(player.playerId, this.props.shownPlayers)}>&times;</button>\r\n            <img src={player.headshot} alt={`${player.name} Headshot`} height=\"350\" width=\"350\"></img>\r\n            {player.number ?\r\n              <span className=\"player-number icon\">{player.number}</span>\r\n              : null\r\n            }\r\n            {teamLogo}\r\n            <img className=\"player-role icon\" src={`./images/${player.role}.png`} alt={`${player.role} Role`} height=\"40\" width=\"48\"></img>\r\n          </div>\r\n          <table>\r\n            <thead>\r\n              <tr><th>{player.name}</th></tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr><td>{player.eliminations_avg_per_10m.toFixed(2)}</td></tr>\r\n              <tr><td>{player.deaths_avg_per_10m.toFixed(2)}</td></tr>\r\n              <tr><td>{player.hero_damage_avg_per_10m.toLocaleString(undefined, {maximumFractionDigits: 0})}</td></tr>\r\n              <tr><td>{player.healing_avg_per_10m.toLocaleString(undefined, {maximumFractionDigits: 0})}</td></tr>\r\n              <tr><td>{player.ultimates_earned_avg_per_10m.toFixed(2)}</td></tr>\r\n              <tr><td>{player.final_blows_avg_per_10m.toFixed(2)}</td></tr>\r\n              <tr><td>{formatSeconds(player.time_played_total)}</td></tr>\r\n            </tbody>\r\n          </table>\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"column\">\r\n        {playerInfo}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AddPlayer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pId: null,\r\n      role: \"allRoles\",\r\n      teamId: 0,\r\n    }\r\n  }\r\n\r\n  setPlayerId = (e) => {\r\n    this.setState({pId: Number(e.target.value)});\r\n  }\r\n  setRole = (e) => {\r\n    this.setState({role: e.target.value});\r\n  }\r\n  setTeamId = (e) => {\r\n    this.setState({teamId: Number(e.target.value)});\r\n  }\r\n\r\n  render() {\r\n    let teamData =  this.props.teamData;\r\n    let teamKeys = Object.keys(teamData);\r\n    teamKeys.sort((a,b) => (teamData[a].name > teamData[b].name) ? 1 : ((teamData[b].name > teamData[a].name) ? -1 : 0));\r\n\r\n    let playerData = this.props.playerData;\r\n    let playerKeys = Object.keys(playerData);\r\n    if (this.state.role !== \"allRoles\") {\r\n      playerKeys = playerKeys.filter((e) => { return playerData[e].role  === this.state.role})\r\n    }\r\n    if (this.state.teamId !== 0) {\r\n      playerKeys = playerKeys.filter((e) => { return playerData[e].teamId  === this.state.teamId})\r\n    }\r\n    playerKeys.sort((a,b) => (playerData[a].name.toLowerCase() > playerData[b].name.toLowerCase()) ? 1 : ((playerData[b].name > playerData[a].name) ? -1 : 0));\r\n\r\n    return (\r\n      <div className=\"column add-player-container\">\r\n        <div></div>\r\n        <div className=\"column add-player-forms\">\r\n          <h2>Select Player</h2>\r\n          <div className=\"player-filters\">\r\n            <select className=\"team-filter\" onChange={this.setTeamId}>\r\n              <option value='0'>All Teams</option>\r\n              {teamKeys.map((tId) =>\r\n                <option key={tId} value={tId}>{teamData[tId].name}</option>\r\n              )}\r\n            </select>\r\n            <select onChange={this.setRole}>\r\n              <option value=\"allRoles\">All Roles</option>\r\n              <option value=\"offense\">Offense</option>\r\n              <option value=\"tank\">Tank</option>\r\n              <option value=\"support\">Support</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <select className=\"player-select\" onChange={this.setPlayerId} size={playerKeys.length < 10 ? playerKeys.length : 10}>\r\n              {playerKeys.map((pId) =>\r\n                <option key={pId} value={pId} onDoubleClick={this.state.pId ? (() => this.props.addPlayer(this.state.pId)) : null}>{playerData[pId].name}</option>\r\n              )}\r\n            </select>\r\n            <div>\r\n              <button\r\n                onClick={this.state.pId ? (() => this.props.addPlayer(this.state.pId)) : null}>\r\n                Add\r\n              </button>\r\n              <button\r\n                onClick={this.props.exitAddPlayer}>\r\n                Exit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playerData: {},\r\n      teamData: {},\r\n      shownPlayers: [],\r\n      addPlayer: true\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      fetch('https://api.overwatchleague.com/v2/teams/').then(value => value.json()),\r\n      fetch('https://api.overwatchleague.com/stats/players').then(value => value.json())\r\n    ]).then( ([teamData, playerStats]) => {\r\n      // get player stats\r\n      let tempPlayerData = {};\r\n      for (let player of playerStats.data) {\r\n        tempPlayerData[player.playerId] = player;\r\n      }\r\n      this.setState({playerData: tempPlayerData});\r\n\r\n      // get team and player data\r\n      let tempTeamData = {};\r\n      for (let team of teamData.data) {\r\n        tempTeamData[team.id] = {\r\n          name: team.name,\r\n          teamLogo: team.logo.main.svg,\r\n          teamColors: team.colors\r\n        }\r\n        let tempPlayerData = this.state.playerData;\r\n        for (let player of team.players) {\r\n          if (tempPlayerData[player.id]) {\r\n            tempPlayerData[player.id].number = player.number;\r\n            tempPlayerData[player.id].headshot = player.headshot;\r\n            tempPlayerData[player.id].meatName = player.fullName;\r\n          }\r\n          // else { console.log(player.name, player.id, 'has no stats'); }\r\n        }\r\n        this.setState({playerData: tempPlayerData});\r\n      }\r\n      this.setState({ teamData: tempTeamData});\r\n    });\r\n    // this.setState({shownPlayers: [5197]});\r\n  }\r\n\r\n  removePlayer = (pId, shownPlayers) => {\r\n    var tempShownPlayers = [];\r\n    for (let player of shownPlayers) {\r\n      if (pId !== player) {\r\n        tempShownPlayers.push(player);\r\n      }\r\n    }\r\n    this.setState({shownPlayers: tempShownPlayers});\r\n  }\r\n\r\n  clearPlayers = () => {\r\n    this.setState({shownPlayers: []});\r\n  }\r\n\r\n  addPlayer = (pId) => {\r\n    this.setState({shownPlayers: [...this.state.shownPlayers, pId]});\r\n    this.setState({addPlayer: false})\r\n  }\r\n\r\n  exitAddPlayer = () => {\r\n    this.setState({addPlayer: false})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <h1>Overwatch League Player Stats</h1>\r\n        <button className=\"add-button main-button\" onClick={() => this.setState({addPlayer: true})}>Add Player</button>\r\n        <button className=\"clear-button main-button\" onClick={this.clearPlayers}>Clear</button>\r\n        <div className=\"stats-container\">\r\n          <div className=\"column stat-labels\">\r\n            <div></div>\r\n            <table>\r\n              <thead>\r\n                <tr><th>Stats Per 10 Min</th></tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr><td>Avgerage Eliminations</td></tr>\r\n                <tr><td>Avgerage Deaths</td></tr>\r\n                <tr><td>Hero Damage</td></tr>\r\n                <tr><td>Healing</td></tr>\r\n                <tr><td>Average Ultimates Earned</td></tr>\r\n                <tr><td>Final Blows</td></tr>\r\n                <tr><td>Total Time Played</td></tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          {this.state.shownPlayers.map((pId) =>\r\n            <PlayerCard\r\n              key={pId}\r\n              player={this.state.playerData[pId]}\r\n              teamData={this.state.teamData}\r\n              removePlayer={this.removePlayer}\r\n              shownPlayers={this.state.shownPlayers}\r\n            />\r\n          )}\r\n          {this.state.addPlayer ?\r\n            <AddPlayer\r\n              playerData={this.state.playerData}\r\n              teamData={this.state.teamData}\r\n              addPlayer={this.addPlayer}\r\n              exitAddPlayer={this.exitAddPlayer}\r\n            />\r\n            : null\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// ===============================================\r\n\r\n\r\nReactDOM.render(<Main/>, document.getElementById('root'));\r\n\r\nfunction formatSeconds(seconds) {\r\n    var hours   = Math.floor(seconds / 3600);\r\n    var minutes = Math.round((seconds - (hours * 3600)) / 60);\r\n    if (hours > 0) return `${hours}h ${minutes}m`;\r\n    return `${minutes}m`;\r\n}\r\n\r\nfunction hexToRgb(hex, alpha) {\r\n   hex   = hex.replace('#', '');\r\n   var r = parseInt(hex.length === 3 ? hex.slice(0, 1).repeat(2) : hex.slice(0, 2), 16);\r\n   var g = parseInt(hex.length === 3 ? hex.slice(1, 2).repeat(2) : hex.slice(2, 4), 16);\r\n   var b = parseInt(hex.length === 3 ? hex.slice(2, 3).repeat(2) : hex.slice(4, 6), 16);\r\n   if ( alpha ) {\r\n      return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\r\n   }\r\n   else {\r\n      return 'rgb(' + r + ', ' + g + ', ' + b + ')';\r\n   }\r\n}\r\n\r\n// TODO\r\n// style playercard: border\r\n// style addPlayer\r\n// have columns align - stat headers, player card, add player\r\n// style entire page\r\n\r\n// addPlayer with responsive text search\r\n// responsive page (stretches)\r\n// add stats by map\r\n"],"sourceRoot":""}