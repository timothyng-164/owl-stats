{"version":3,"sources":["scatter.js","index.js"],"names":["AxisSelect","onChange","this","props","updateScatter","value","React","Component","Scatter","updateScatterX","e","setState","xValue","target","xTitle","options","selectedIndex","text","forceUpdate","updateScatterY","yValue","yTitle","state","convertedTime","playerData","teamData","Object","values","keys","k","time_played_total","d3","attr","svg","id","selectAll","remove","width","height","d","xAxisLabel","yAxisLabel","margin","innerWidth","innerHeight","xScale","domain","range","nice","yScale","g","append","xAxis","tickFormat","tickSize","tickPadding","yAxis","yAxisG","call","xAxisG","select","data","enter","teamId","teamColors","primary","color","name","toFixed","length","drawChart","className","title","PlayerCard","team","player","teamLogo","teamColorPrimary","src","alt","hex","alpha","replace","r","parseInt","slice","repeat","b","hexToRgb","playerInfo","style","backgroundColor","onClick","removePlayer","playerId","shownPlayers","headshot","number","role","eliminations_avg_per_10m","deaths_avg_per_10m","hero_damage_avg_per_10m","toLocaleString","undefined","maximumFractionDigits","healing_avg_per_10m","ultimates_earned_avg_per_10m","final_blows_avg_per_10m","seconds","hours","Math","floor","minutes","round","formatSeconds","AddPlayer","setPlayerId","pId","Number","setRole","setTeamId","teamKeys","sort","a","playerKeys","filter","toLowerCase","map","tId","key","size","onDoubleClick","addPlayer","exitAddPlayer","Main","tempShownPlayers","push","clearPlayers","scatterX","scatterY","Promise","all","fetch","then","json","playerStats","tempPlayerData","tempTeamData","logo","main","colors","players","meatName","fullName","class","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01d9fc70.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nclass AxisSelect extends React.Component {\r\n  render() {\r\n    return (\r\n      <select onChange={this.props.updateScatter} value={this.props.value}>\r\n        <option value='eliminations_avg_per_10m'>Avg Elimination per 10m</option>\r\n        <option value='deaths_avg_per_10m'>Avg Death per 10m</option>\r\n        <option value='hero_damage_avg_per_10m'>Avg Damage per 10m</option>\r\n        <option value='healing_avg_per_10m'>Avg Healing per 10m</option>\r\n        <option value='ultimates_earned_avg_per_10m'>Avg Ultimates Earned per 10m</option>\r\n        <option value='final_blows_avg_per_10m'>Avg Final Blows per 10m</option>\r\n        <option value='time_played_total'>Total Time Played (hr)</option>\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nclass Scatter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xValue: this.props.xValue,\r\n      yValue: this.props.yValue,\r\n      xTitle: this.props.xTitle,\r\n      yTitle: this.props.yTitle,\r\n      convertedTime: false\r\n    }\r\n  }\r\n\r\n  drawChart() {\r\n    let playerData = this.props.playerData;\r\n    let teamData = this.props.teamData;\r\n    playerData = Object.values(playerData);\r\n    if (!this.state.convertedTime) {\r\n      for (let k of Object.keys(this.props.playerData)) {   // convert seconds to hours\r\n        this.props.playerData[k].time_played_total /= 3600;\r\n      }\r\n      this.setState({convertedTime: true});\r\n    }\r\n\r\n    d3.select('#scatter')\r\n      .attr(\"id\", 'owl-scatter')\r\n      .attr(\"width\", 1150)\r\n      .attr(\"height\", 650);\r\n    const svg = d3.select(`#${this.props.id}`);\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    const width = +svg.attr('width');\r\n    const height = +svg.attr('height');\r\n\r\n    const xValue = d => d[this.state.xValue];\r\n    const xAxisLabel = this.state.xTitle;\r\n\r\n    const yValue = d => d[this.state.yValue];\r\n    const yAxisLabel = this.state.yTitle;\r\n\r\n    const margin = { top: 20, right: 40, bottom: 88, left: 150 };\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    const xScale = d3.scaleLinear()\r\n      .domain(d3.extent(playerData, xValue))\r\n      .range([0, innerWidth])\r\n      .nice();\r\n\r\n    const yScale = d3.scaleLinear()\r\n      .domain(d3.extent(playerData, yValue))\r\n      .range([innerHeight, 0])\r\n      .nice();\r\n\r\n    const g = svg.append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    const xAxis = d3.axisBottom(xScale)\r\n      .tickFormat(d3.format('~s'))\r\n      .tickSize(-innerHeight)\r\n      .tickPadding(15);\r\n\r\n    const yAxis = d3.axisLeft(yScale)\r\n      .tickFormat(d3.format('~s'))\r\n      .tickSize(-innerWidth)\r\n      .tickPadding(10);\r\n\r\n    const yAxisG = g.append('g').call(yAxis);\r\n    yAxisG.selectAll('.domain').remove();\r\n\r\n    yAxisG.append('text')\r\n        .attr('class', 'axis-label')\r\n        .attr('y', -93)\r\n        .attr('x', -innerHeight / 2)\r\n        .attr('fill', 'black')\r\n        .attr('transform', `rotate(-90)`)\r\n        .attr('text-anchor', 'middle')\r\n        .text(yAxisLabel);\r\n\r\n    const xAxisG = g.append('g').call(xAxis)\r\n      .attr('transform', `translate(0,${innerHeight})`);\r\n\r\n    xAxisG.select('.domain').remove();\r\n\r\n    xAxisG.append('text')\r\n        .attr('class', 'axis-label')\r\n        .attr('y', 75)\r\n        .attr('x', innerWidth / 2)\r\n        .attr('fill', 'black')\r\n        .text(xAxisLabel);\r\n\r\n    const circleRadius = 5;\r\n    g.selectAll('circle').data(playerData)\r\n      .enter().append('circle')\r\n        .attr('cy', d => yScale(yValue(d)))\r\n        .attr('cx', d => xScale(xValue(d)))\r\n        .attr('r', circleRadius)\r\n        .attr('fill', d => `${teamData[+d.teamId].teamColors.primary.color}`)\r\n        .append('svg:title')\r\n        .text(d =>\r\n          `${d.name}\\nX: ${d[this.state.xValue].toFixed(2)}\\nY: ${d[this.state.yValue].toFixed(2)}\r\n          `);\r\n  }\r\n\r\n  updateScatterX = (e) => {\r\n    this.setState({xValue: e.target.value});\r\n    this.setState({xTitle: e.target.options[e.target.selectedIndex].text})\r\n    this.forceUpdate();\r\n  }\r\n\r\n  updateScatterY = (e) => {\r\n    this.setState({yValue: e.target.value});\r\n    this.setState({yTitle: e.target.options[e.target.selectedIndex].text})\r\n    this.forceUpdate();\r\n  }\r\n\r\n  render(){\r\n    if (Object.keys(this.props.playerData).length > 0\r\n      && Object.keys(this.props.teamData).length > 0) {\r\n      this.drawChart();\r\n    }\r\n    return (\r\n      <div className=\"scatter-header\">\r\n        <h1>{this.props.title}</h1>\r\n        <div className=\"axisSelects\">\r\n          <AxisSelect updateScatter={this.updateScatterX} value={this.state.xValue}/>\r\n          <p>vs</p>\r\n          <AxisSelect updateScatter={this.updateScatterY} value={this.state.yValue}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Scatter;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Scatter from './scatter';\r\n\r\n\r\nclass PlayerCard extends React.Component {\r\n  render() {\r\n    let player = this.props.player;\r\n    let teamData = this.props.teamData;\r\n    let team;\r\n\r\n    if (player) {\r\n      team = teamData[player.teamId];\r\n      let teamLogo;\r\n      let teamColorPrimary;\r\n      if (team) {\r\n        teamLogo = <img className=\"player-team icon\"src={team.teamLogo} alt={`${team.name} Logo`} height=\"50\" width=\"48\"></img>\r\n        teamColorPrimary = hexToRgb(team.teamColors.primary.color, 0.5);\r\n      }\r\n      var playerInfo = (\r\n        <span className=\"player-card\">\r\n          <div className=\"player-avatar\" style={{backgroundColor: teamColorPrimary}}>\r\n            <button className=\"close\" onClick={() => this.props.removePlayer(player.playerId, this.props.shownPlayers)}>&times;</button>\r\n            <img src={player.headshot} alt={`${player.name} Headshot`} height=\"350\" width=\"350\"></img>\r\n            {player.number ?\r\n              <span className=\"player-number icon\">{player.number}</span>\r\n              : null\r\n            }\r\n            {teamLogo}\r\n            <img className=\"player-role icon\" src={`./images/${player.role}.png`} alt={`${player.role} Role`} height=\"40\" width=\"48\"></img>\r\n          </div>\r\n          <table>\r\n            <thead>\r\n              <tr><th>{player.name}</th></tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr><td>{player.eliminations_avg_per_10m.toFixed(2)}</td></tr>\r\n              <tr><td>{player.deaths_avg_per_10m.toFixed(2)}</td></tr>\r\n              <tr><td>{player.hero_damage_avg_per_10m.toLocaleString(undefined, {maximumFractionDigits: 0})}</td></tr>\r\n              <tr><td>{player.healing_avg_per_10m.toLocaleString(undefined, {maximumFractionDigits: 0})}</td></tr>\r\n              <tr><td>{player.ultimates_earned_avg_per_10m.toFixed(2)}</td></tr>\r\n              <tr><td>{player.final_blows_avg_per_10m.toFixed(2)}</td></tr>\r\n              <tr><td>{formatSeconds(player.time_played_total)}</td></tr>\r\n            </tbody>\r\n          </table>\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"column\">\r\n        {playerInfo}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AddPlayer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pId: null,\r\n      role: \"allRoles\",\r\n      teamId: 0,\r\n    }\r\n  }\r\n\r\n  setPlayerId = (e) => {\r\n    this.setState({pId: Number(e.target.value)});\r\n  }\r\n  setRole = (e) => {\r\n    this.setState({role: e.target.value});\r\n  }\r\n  setTeamId = (e) => {\r\n    this.setState({teamId: Number(e.target.value)});\r\n  }\r\n\r\n  render() {\r\n    let teamData =  this.props.teamData;\r\n    let teamKeys = Object.keys(teamData);\r\n    teamKeys.sort((a,b) => (teamData[a].name > teamData[b].name) ? 1 : ((teamData[b].name > teamData[a].name) ? -1 : 0));\r\n\r\n    let playerData = this.props.playerData;\r\n    let playerKeys = Object.keys(playerData);\r\n    if (this.state.role !== \"allRoles\") {\r\n      playerKeys = playerKeys.filter((e) => { return playerData[e].role  === this.state.role})\r\n    }\r\n    if (this.state.teamId !== 0) {\r\n      playerKeys = playerKeys.filter((e) => { return playerData[e].teamId  === this.state.teamId})\r\n    }\r\n    playerKeys.sort((a,b) => (playerData[a].name.toLowerCase() > playerData[b].name.toLowerCase()) ? 1 : ((playerData[b].name > playerData[a].name) ? -1 : 0));\r\n\r\n    return (\r\n      <div className=\"column add-player-container\">\r\n        <div></div>\r\n        <div className=\"column add-player-forms\">\r\n          <h2>Select Player</h2>\r\n          <div className=\"player-filters\">\r\n            <select className=\"team-filter\" onChange={this.setTeamId}>\r\n              <option value='0'>All Teams</option>\r\n              {teamKeys.map((tId) =>\r\n                <option key={tId} value={tId}>{teamData[tId].name}</option>\r\n              )}\r\n            </select>\r\n            <select onChange={this.setRole}>\r\n              <option value=\"allRoles\">All Roles</option>\r\n              <option value=\"offense\">Offense</option>\r\n              <option value=\"tank\">Tank</option>\r\n              <option value=\"support\">Support</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <select className=\"player-select\" onChange={this.setPlayerId} size={playerKeys.length < 10 ? playerKeys.length : 10}>\r\n              {playerKeys.map((pId) =>\r\n                <option key={pId} value={pId} onDoubleClick={this.state.pId ? (() => this.props.addPlayer(this.state.pId)) : null}>{playerData[pId].name}</option>\r\n              )}\r\n            </select>\r\n            <div>\r\n              <button\r\n                onClick={this.state.pId ? (() => this.props.addPlayer(this.state.pId)) : null}>\r\n                Add\r\n              </button>\r\n              <button\r\n                onClick={this.props.exitAddPlayer}>\r\n                Exit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playerData: {},\r\n      teamData: {},\r\n      shownPlayers: [],\r\n      addPlayer: true,\r\n      scatterX: 'eliminations_avg_per_10m',\r\n      scatterY: 'deaths_avg_per_10m'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      fetch('https://api.overwatchleague.com/v2/teams/').then(value => value.json()),\r\n      fetch('https://api.overwatchleague.com/stats/players').then(value => value.json())\r\n    ]).then( ([teamData, playerStats]) => {\r\n      // get player stats\r\n      let tempPlayerData = {};\r\n      for (let player of playerStats.data) {\r\n        tempPlayerData[player.playerId] = player;\r\n      }\r\n      this.setState({playerData: tempPlayerData});\r\n\r\n      // get team and player data\r\n      let tempTeamData = {};\r\n      for (let team of teamData.data) {\r\n        tempTeamData[team.id] = {\r\n          name: team.name,\r\n          teamLogo: team.logo.main.svg,\r\n          teamColors: team.colors\r\n        }\r\n        let tempPlayerData = this.state.playerData;\r\n        for (let player of team.players) {\r\n          if (tempPlayerData[player.id]) {\r\n            tempPlayerData[player.id].number = player.number;\r\n            tempPlayerData[player.id].headshot = player.headshot;\r\n            tempPlayerData[player.id].meatName = player.fullName;\r\n          }\r\n          // else { console.log(player.name, player.id, 'has no stats'); }\r\n        }\r\n        this.setState({playerData: tempPlayerData});\r\n      }\r\n      this.setState({ teamData: tempTeamData});\r\n    });\r\n    // this.setState({shownPlayers: [5197]});\r\n  }\r\n\r\n  removePlayer = (pId, shownPlayers) => {\r\n    var tempShownPlayers = [];\r\n    for (let player of shownPlayers) {\r\n      if (pId !== player) {\r\n        tempShownPlayers.push(player);\r\n      }\r\n    }\r\n    this.setState({shownPlayers: tempShownPlayers});\r\n  }\r\n\r\n  clearPlayers = () => {\r\n    this.setState({shownPlayers: []});\r\n  }\r\n\r\n  addPlayer = (pId) => {\r\n    this.setState({shownPlayers: [...this.state.shownPlayers, pId]});\r\n    this.setState({addPlayer: false})\r\n  }\r\n\r\n  exitAddPlayer = () => {\r\n    this.setState({addPlayer: false})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <div id=\"compare-container\">\r\n          <h1>Overwatch League Player Stats Selector</h1>\r\n          <button className=\"add-button main-button\" onClick={() => this.setState({addPlayer: true})}>Add Player</button>\r\n          <button className=\"clear-button main-button\" onClick={this.clearPlayers}>Clear</button>\r\n          <div className=\"stats-container\">\r\n            <div className=\"column stat-labels\">\r\n              <div></div>\r\n              <table>\r\n                <thead>\r\n                  <tr><th>Stats Per 10 Min</th></tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr><td>Avgerage Eliminations</td></tr>\r\n                  <tr><td>Avgerage Deaths</td></tr>\r\n                  <tr><td>Hero Damage</td></tr>\r\n                  <tr><td>Healing</td></tr>\r\n                  <tr><td>Average Ultimates Earned</td></tr>\r\n                  <tr><td>Final Blows</td></tr>\r\n                  <tr><td>Total Time Played</td></tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {this.state.shownPlayers.map((pId) =>\r\n              <PlayerCard\r\n                key={pId}\r\n                player={this.state.playerData[pId]}\r\n                teamData={this.state.teamData}\r\n                removePlayer={this.removePlayer}\r\n                shownPlayers={this.state.shownPlayers}\r\n              />\r\n            )}\r\n            {this.state.addPlayer\r\n              ? <AddPlayer\r\n                  playerData={this.state.playerData}\r\n                  teamData={this.state.teamData}\r\n                  addPlayer={this.addPlayer}\r\n                  exitAddPlayer={this.exitAddPlayer}\r\n                />\r\n              : null\r\n            }\r\n          </div>\r\n        </div>\r\n        <hr></hr>\r\n        <div id=\"scatter-container\">\r\n          <div class=\"scatter-items\">\r\n            <Scatter\r\n              playerData={this.state.playerData}\r\n              teamData={this.state.teamData}\r\n              id={'owl-scatter'}\r\n              title={'Overwatch League Player Stats'}\r\n              xValue={'eliminations_avg_per_10m'}\r\n              yValue={'deaths_avg_per_10m'}\r\n              xTitle={'Avg Eliminations per 10m'}\r\n              yTitle={'Avg Deaths per 10m'}\r\n            />\r\n            <svg id=\"scatter\"></svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// ===============================================\r\n\r\n\r\nReactDOM.render(<Main/>, document.getElementById('root'));\r\n\r\nfunction formatSeconds(seconds) {\r\n    var hours   = Math.floor(seconds / 3600);\r\n    var minutes = Math.round((seconds - (hours * 3600)) / 60);\r\n    if (hours > 0) return `${hours}h ${minutes}m`;\r\n    return `${minutes}m`;\r\n}\r\n\r\nfunction hexToRgb(hex, alpha) {\r\n   hex   = hex.replace('#', '');\r\n   var r = parseInt(hex.length === 3 ? hex.slice(0, 1).repeat(2) : hex.slice(0, 2), 16);\r\n   var g = parseInt(hex.length === 3 ? hex.slice(1, 2).repeat(2) : hex.slice(2, 4), 16);\r\n   var b = parseInt(hex.length === 3 ? hex.slice(2, 3).repeat(2) : hex.slice(4, 6), 16);\r\n   if ( alpha ) {\r\n      return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')';\r\n   }\r\n   else {\r\n      return 'rgb(' + r + ', ' + g + ', ' + b + ')';\r\n   }\r\n}\r\n"],"sourceRoot":""}